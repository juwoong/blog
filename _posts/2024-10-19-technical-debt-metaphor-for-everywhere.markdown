---
layout: post
title: "기술 부채 메타포는 어디에도 적용 가능하다"
date: 2024-10-19 20:40:00+0900
category: idea
---

주제에 대해 서술하기에 앞서, 업계 전체에 흔하게 퍼져 있는 "기술 부채" 메타포에 관한 오해를 풀어야 할 것 같습니다.
대부분의 사람들에게 "기술 부채"로 인한 어려움을 이야기하면, 레거시 코드들로 인해 현재 개발에 많은 어려움을 겪고 있는 상황을 떠올릴 것입니다.
이 또한 프로덕트를 개발하는 엔지니어에게 있어서 큰 어려움임은 맞습니다. 다만 원래 이 비유가 어디서부터 비롯되었는지, 어떤 상황을 문제라고 여기는 것인지는 정확히 알고 넘어가는 것이 좋을 것 같습니다. 이 글에서 다루고자 하는 내용도 원래 비유로부터 시작하기 때문입니다.

기술 부채[^1]가 원래 설명하고 싶었던 문제 상황은, "본인이 도메인에 대해 이해하고 있는 그대로 코드를 작성하지 않는" 것입니다. 이렇게 된다면 부채를 지었을 때 계속 이자를 내야 하는 것처럼, 번 만큼 이자로 다 나가기 때문에 발전이 없을 것이라는 비유였습니다.

다만 이 비유를 처음 들었던 워드는 아래 두가지 상황을 명확히 구분합니다.

1. 잘못된 코드를 작성하는 것 => 반대
2. 내가 도메인에 대해 잘못 이해하고 있더라도, 이를 반영한 코드를 작성하는 것 => 찬성

이를 단순히 코드를 작성하는 것 뿐만 아니라, 어디에도 적용할 수 있습니다. 글을 쓰거나, 새로운 걸 디자인하거나 할 때 말이죠. 그리고 점차 수정해 나가면 되는 것입니다. 반대로 내가 이해한 것이 아닌 다른 것들을 녹여내기 시작한다면 이상하게 꼬여 더는 수정할 수 없는 무언가가 될 것입니다. 그렇게 되면 개선의 여지는 없는 무언가가 되어 버리는 것입니다.

---

[^1] 워드 커닝햄이 직접 설명한 [영상](https://www.youtube.com/watch?v=pqeJFYwnkjE)이 있고, 이 영상의 [스크립트](https://wiki.c2.com/?WardExplainsDebtMetaphor) 도 있으니 궁금하시다면 읽어 보세요.
